package proxy;
import java.awt.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import proxy.panels.*;

public class home extends javax.swing.JFrame {
    Boolean recheck=true,started=false,ser=true,showstatus=false;
    
    GridBagLayout layout=new GridBagLayout();
     GridBagConstraints gc;
    Three t; 
    Wellcome wel;
    Monitor m1;
    Thread mt1;
    Monitor m2;
    Thread mt2;
    FileEdit fe;
    StatusShow ss;
    Setting s;
    public home() throws MalformedURLException {
        
        initComponents();
        t=new Three();
        wel=new Wellcome();
        m1=new Monitor();
        m2=new Monitor();
        mt1=new Thread(m1);
         mt2=new Thread(m2);
        fe=new FileEdit();
        s=new Setting();
        ss=new StatusShow();
        DynamicPanel1.setLayout(layout);
        gc=new GridBagConstraints();
         gc.gridx=0;
        gc.gridy=0;
        DynamicPanel1.add(wel,gc);
        DynamicPanel1.add(t,gc); 
        DynamicPanel1.add(m1,gc);
        DynamicPanel1.add(m2,gc);
        DynamicPanel1.add(fe,gc);
        DynamicPanel1.add(s,gc);
        DynamicPanel1.add(ss,gc);
              
         t.setVisible(false);
         m1.setVisible(false);
           m2.setVisible(false);
         fe.setVisible(false);
          s.setVisible(false);
          ss.setVisible(false);
          ss.setFileEdit(fe);
          Lnet.setText("<html>Network<br>Monitor</html>");
           Lcache.setText("<html>Storage<br>Monitor</html>");
           status();
          wel.setVisible(true);  
          
          // URL url = new URL("/icons/imgtload.png");
        //Image image = Toolkit.getDefaultToolkit().createImage(url);
        //ImageIcon spinIcon = new ImageIcon(image);
          //Bstatus.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imgload.png"))); // NOI18N   
          //Bstatus.setRolloverIcon(spinIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DynamicPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        Bstart = new javax.swing.JButton();
        Bstop = new javax.swing.JButton();
        Bclient = new javax.swing.JButton();
        Bwebsite = new javax.swing.JButton();
        Bfiles = new javax.swing.JButton();
        Bsetting = new javax.swing.JButton();
        Lstart = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LstatusShow = new javax.swing.JLabel();
        Bstatus = new javax.swing.JButton();
        BnetMonitor = new javax.swing.JButton();
        Lnet = new javax.swing.JLabel();
        BcacheMonitor = new javax.swing.JButton();
        Lcache = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PROXY SERVER");
        setResizable(false);

        javax.swing.GroupLayout DynamicPanel1Layout = new javax.swing.GroupLayout(DynamicPanel1);
        DynamicPanel1.setLayout(DynamicPanel1Layout);
        DynamicPanel1Layout.setHorizontalGroup(
            DynamicPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DynamicPanel1Layout.setVerticalGroup(
            DynamicPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        Bstart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/start.png"))); // NOI18N
        Bstart.setAlignmentY(0.0F);
        Bstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BstartActionPerformed(evt);
            }
        });

        Bstop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stop.png"))); // NOI18N
        Bstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BstopActionPerformed(evt);
            }
        });

        Bclient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clients.png"))); // NOI18N
        Bclient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BclientActionPerformed(evt);
            }
        });

        Bwebsite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/website.png"))); // NOI18N
        Bwebsite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BwebsiteActionPerformed(evt);
            }
        });

        Bfiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/files.png"))); // NOI18N
        Bfiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BfilesActionPerformed(evt);
            }
        });

        Bsetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/setting.png"))); // NOI18N
        Bsetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsettingActionPerformed(evt);
            }
        });

        Lstart.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Lstart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lstart.setText("Start");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Stop");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Clients");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Websites");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Files");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Setting");

        LstatusShow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        LstatusShow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LstatusShow.setText("status");

        Bstatus.setContentAreaFilled(false);
        Bstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BstatusActionPerformed(evt);
            }
        });

        BnetMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/network.png"))); // NOI18N
        BnetMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnetMonitorActionPerformed(evt);
            }
        });

        Lnet.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Lnet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lnet.setText("Network");

        BcacheMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/memory.png"))); // NOI18N
        BcacheMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BcacheMonitorActionPerformed(evt);
            }
        });

        Lcache.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Lcache.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lcache.setText("Storage");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Bstart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Bstop, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Bclient, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Bwebsite, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Bfiles, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BnetMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BcacheMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Lstart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Lnet, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Lcache, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Bsetting, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 470, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Bstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LstatusShow, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Bclient, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bwebsite, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bfiles, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bsetting, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BnetMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BcacheMonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Bstart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bstop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lnet, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(Lcache, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Lstart)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(LstatusShow))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DynamicPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DynamicPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BclientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BclientActionPerformed
         m1.setVisible(false);
          m2.setVisible(false);
         s.setVisible(false);
         wel.setVisible(false);
          ss.setVisible(false);
         t.setVisible(true);
          t.setClient();
    }//GEN-LAST:event_BclientActionPerformed

    private void BwebsiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BwebsiteActionPerformed
        m1.setVisible(false);
         m2.setVisible(false);
        fe.setVisible(false);
        s.setVisible(false);
         wel.setVisible(false);
          ss.setVisible(false);
         t.setVisible(true);
        t.setWebsite();
    }//GEN-LAST:event_BwebsiteActionPerformed

    private void BfilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BfilesActionPerformed
          m1.setVisible(false);
           m2.setVisible(false);
          fe.setVisible(false);
          s.setVisible(false);
         wel.setVisible(false);
          ss.setVisible(false);
         t.setVisible(true);
       t.setFiles();
    }//GEN-LAST:event_BfilesActionPerformed

    private void BstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BstartActionPerformed
       
        Bstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imgload.png")));
        LstatusShow.setText("WAIT()");
        Bstart.setEnabled(false);
        
        this.setEnabled(false);
         if(started)
         {  
             service("restart");  
         }
         else if(!started)
         {    
              service("start"); 
         }      
        status();
        this.setEnabled(true);
    }//GEN-LAST:event_BstartActionPerformed

    private void BstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BstopActionPerformed
         LstatusShow.setText("WAIT()");
         Bstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imgload.png"))); // NOI18N
         Bstop.setEnabled(false);
        
           this.setEnabled(false);
           
           service("stop");   
        status();
       this.setEnabled(true);
    }//GEN-LAST:event_BstopActionPerformed

    private void BstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BstatusActionPerformed

    private void BnetMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnetMonitorActionPerformed
        t.setVisible(false);
        fe.setVisible(false);
        s.setVisible(false);
        wel.setVisible(false);
         ss.setVisible(false);
          m2.setVisible(false);
        m1.setVisible(true);
        if(!mt1.isAlive())
        {     
                m1.setNetMonitor();
                mt1.start();  
        }      
    }//GEN-LAST:event_BnetMonitorActionPerformed

    private void BsettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsettingActionPerformed
        Bsetting.setEnabled(false);
        t.setVisible(false);
        fe.setVisible(false);
        m1.setVisible(false);
        m2.setVisible(false);
        wel.setVisible(false);
         ss.setVisible(false);
        s.setFileEdit(fe);
        s.setVisible(true);
        s.setFilePath();
        Bsetting.setEnabled(true);
    }//GEN-LAST:event_BsettingActionPerformed

    private void BcacheMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BcacheMonitorActionPerformed
      t.setVisible(false);
        fe.setVisible(false);
        s.setVisible(false);
        wel.setVisible(false);
         ss.setVisible(false);
          m1.setVisible(false);
        m2.setVisible(true);
        if(!mt2.isAlive())
        {   m2.setStorageMonitor();
            mt2.start();
        }
    }//GEN-LAST:event_BcacheMonitorActionPerformed
   
    public void service(String start_or_stop)
    {    String line="";
          BufferedReader read;
        try {
                String cmd = "systemctl "+start_or_stop+" squid"; 
                Runtime run = Runtime.getRuntime();
                Process pr = run.exec(cmd);
                 read = new BufferedReader(new InputStreamReader(pr.getInputStream()));
                 recheck=false;
                    if(ser)
                    {
                        ser=false;
                        status();
                    }
                    
            try {
                pr.waitFor();
            } catch (InterruptedException e) {
               JOptionPane.showMessageDialog(null,e.getMessage());
            }     
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    public  void status()
    {   String line="";
        Boolean stat=false;
        try {
                String cmd = "systemctl status squid"; 
                Runtime run = Runtime.getRuntime();
                Process pr = run.exec(cmd);BufferedReader read = new BufferedReader(new InputStreamReader(
                 pr.getInputStream()));
            try {
                pr.waitFor();
            } catch (InterruptedException e) {
                System.out.println(e.getMessage());
            }
                 if(showstatus)
                    {  String lines="",stradd="";
                        showstatus=false;
                        while (read.ready()) 
                        {
                          //lines=read.readLine();
                          lines=lines+read.readLine()+"\n";
                        }
                        t.setVisible(false);
                        fe.setVisible(false);
                        m1.setVisible(false);
                         m2.setVisible(false);
                        wel.setVisible(false);      
                        s.setVisible(false);
                        ss.setVisible(true); 
                        ss.setText(lines);
                        return;
                    }
            while (read.ready()) 
            {
                line=read.readLine();
                stat=line.contains("running");
                if(line.contains("failed"))
                {
                   Bstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/alert.png")));
                    LstatusShow.setText("ERROR");
                    if(started)
                    {
                        Bstart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/start.png")));
                        Lstart.setText("Start");
                    }
                    else if(!started)
                    {
                       
                    }    
                    Bstart.setEnabled(true);
                     Bstop.setEnabled(false);
                     if(ser)service("start");
                     else
                     {
                         //JOptionPane.showMessageDialog(null,"ERROR OCCURRED PLEASE CHECK /etc/squid/squid.config");
                          int result = JOptionPane.showConfirmDialog((Component) null, "ERROR OCCURRED PLEASE CHECK /etc/squid/squid.config",
        "ALERT", JOptionPane.OK_CANCEL_OPTION);
                        if(result==0)
                        {  showstatus=true;
                            status();
                            
                        }
                      }
                   return;
                }
                if(stat)break;
            }
            if(stat)
            {
                if(recheck)service("restart");
                Bstop.setEnabled(true);
                LstatusShow.setText("STARTED");
                Bstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/greendot.png")));
                 Bstart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/restart.png")));
                 Lstart.setText("Restart");
                 Bstart.setEnabled(true);
                 started=true;
                 FileData.setFilePath();
            }
            else
            {   if(recheck)service("stop");
                 Bstart.setEnabled(true);
                 Bstop.setEnabled(false);
                 Lstart.setText("Start");
                 LstatusShow.setText("STOPPED");
                 Bstatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/reddot.png")));
                  Bstart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/start.png")));
                  started=false;
                   FileData.setFilePath();
            }
        } catch (IOException e) {
             JOptionPane.showMessageDialog(null,"ERROR"+e);           
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new home().setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BcacheMonitor;
    private javax.swing.JButton Bclient;
    private javax.swing.JButton Bfiles;
    private javax.swing.JButton BnetMonitor;
    private javax.swing.JButton Bsetting;
    private javax.swing.JButton Bstart;
    private javax.swing.JButton Bstatus;
    private javax.swing.JButton Bstop;
    private javax.swing.JButton Bwebsite;
    private javax.swing.JPanel DynamicPanel1;
    private javax.swing.JLabel Lcache;
    private javax.swing.JLabel Lnet;
    private javax.swing.JLabel Lstart;
    private javax.swing.JLabel LstatusShow;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

}
